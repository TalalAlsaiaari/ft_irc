Channel.cpp:23:52: error: return type of out-of-line definition of 'Channel::getMembers' differs from that in the declaration
const std::map<std::string, Client* >&    Channel::getMembers() const { return members; }
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             ^
./Channel.hpp:51:42: note: previous declaration is here
    const std::map<std::string, Client>&        getMembers() const;
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~        ^
Channel.cpp:24:51: error: return type of out-of-line definition of 'Channel::getInvited' differs from that in the declaration
const std::map<std::string, Client*>&    Channel::getInvited() const { return invited; }
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             ^
./Channel.hpp:52:39: note: previous declaration is here
        const std::map<std::string, Client>&    getInvited() const;
              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    ^
Channel.cpp:25:51: error: return type of out-of-line definition of 'Channel::getOperators' differs from that in the declaration
const std::map<std::string, Client*>&    Channel::getOperators() const { return operators; }
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             ^
./Channel.hpp:53:42: note: previous declaration is here
    const std::map<std::string, Client>&        getOperators() const;
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~        ^
Channel.cpp:26:51: error: return type of out-of-line definition of 'Channel::getBanned' differs from that in the declaration
const std::map<std::string, Client*>&    Channel::getBanned() const { return banned; }
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             ^
./Channel.hpp:54:39: note: previous declaration is here
        const std::map<std::string, Client>&    getBanned() const;
              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    ^
Channel.cpp:33:59: error: use of undeclared identifier 'topicValue'
void        Channel::setTopic(std::string topic) { pass = topicValue; }
                                                          ^
Channel.cpp:33:43: error: unused parameter 'topic' [-Werror,-Wunused-parameter]
void        Channel::setTopic(std::string topic) { pass = topicValue; }
                                          ^
Channel.cpp:43:92: error: use of undeclared identifier 'channelPassword'
bool        Channel::checkPassword(const std::string& password) const { return password == channelPassword; }
                                                                                           ^
Channel.cpp:106:114: error: no member named 'getNickname' in 'Client'
            std::string notice = "NOTICE " + name + " :" + client->getNick() + " has been banned by " + invoker->getNickname() + " (" + reason + ")";
                                                                                                        ~~~~~~~  ^
Channel.cpp:111:116: error: no member named 'getNickname' in 'Client'
            std::string logMessage = client->getNick() + " был забанен оператором " + invoker->getNickname() + " по причине: " + reason;
                                                                                      ~~~~~~~  ^
Channel.cpp:120:21: error: no viable conversion from '__map_iterator<__tree_iterator<__value_type<[...], Client *>, std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Client *> > >::__node_pointer, [...]>>' to '__map_iterator<__tree_iterator<__value_type<[...], Client>, std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Client> > >::__node_pointer, [...]>>'
    client_iterator it = members.find(client->getNick());
                    ^    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/map:776:28: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'std::__1::map<std::__1::basic_string<char>, Client *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Client *> > >::iterator' (aka '__map_iterator<__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client *>, void *> *, long> >') to 'const std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client>, void *> *, long> > &' for 1st argument
class _LIBCPP_TEMPLATE_VIS __map_iterator
                           ^
/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/map:794:5: note: candidate constructor not viable: no known conversion from 'std::__1::map<std::__1::basic_string<char>, Client *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Client *> > >::iterator' (aka '__map_iterator<__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client *>, void *> *, long> >') to 'std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client>, void *> *, long>' for 1st argument
    __map_iterator(_TreeIterator __i) _NOEXCEPT : __i_(__i) {}
    ^
Channel.cpp:131:5: error: use of undeclared identifier 'clientToRemove'
    clientToRemove->removeChannelOfClient(name);
    ^
Channel.cpp:143:21: error: no viable conversion from '__map_iterator<__tree_iterator<__value_type<[...], Client *>, std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Client *> > >::__node_pointer, [...]>>' to '__map_iterator<__tree_iterator<__value_type<[...], Client>, std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Client> > >::__node_pointer, [...]>>'
    client_iterator it = operators.find(client->getNick());
                    ^    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/map:776:28: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'std::__1::map<std::__1::basic_string<char>, Client *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Client *> > >::iterator' (aka '__map_iterator<__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client *>, void *> *, long> >') to 'const std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client>, void *> *, long> > &' for 1st argument
class _LIBCPP_TEMPLATE_VIS __map_iterator
                           ^
/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/map:794:5: note: candidate constructor not viable: no known conversion from 'std::__1::map<std::__1::basic_string<char>, Client *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Client *> > >::iterator' (aka '__map_iterator<__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client *>, void *> *, long> >') to 'std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client>, void *> *, long>' for 1st argument
    __map_iterator(_TreeIterator __i) _NOEXCEPT : __i_(__i) {}
    ^
Channel.cpp:162:21: error: no viable conversion from '__map_iterator<__tree_iterator<__value_type<[...], Client *>, std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Client *> > >::__node_pointer, [...]>>' to '__map_iterator<__tree_iterator<__value_type<[...], Client>, std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Client> > >::__node_pointer, [...]>>'
    client_iterator it = invited.find(client->getNick());
                    ^    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/map:776:28: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'std::__1::map<std::__1::basic_string<char>, Client *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Client *> > >::iterator' (aka '__map_iterator<__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client *>, void *> *, long> >') to 'const std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client>, void *> *, long> > &' for 1st argument
class _LIBCPP_TEMPLATE_VIS __map_iterator
                           ^
/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/map:794:5: note: candidate constructor not viable: no known conversion from 'std::__1::map<std::__1::basic_string<char>, Client *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Client *> > >::iterator' (aka '__map_iterator<__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client *>, void *> *, long> >') to 'std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client>, void *> *, long>' for 1st argument
    __map_iterator(_TreeIterator __i) _NOEXCEPT : __i_(__i) {}
    ^
Channel.cpp:178:21: error: no viable conversion from '__map_iterator<__tree_iterator<__value_type<[...], Client *>, std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Client *> > >::__node_pointer, [...]>>' to '__map_iterator<__tree_iterator<__value_type<[...], Client>, std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Client> > >::__node_pointer, [...]>>'
    client_iterator it = banned.find(client->getNick());
                    ^    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/map:776:28: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'std::__1::map<std::__1::basic_string<char>, Client *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Client *> > >::iterator' (aka '__map_iterator<__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client *>, void *> *, long> >') to 'const std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client>, void *> *, long> > &' for 1st argument
class _LIBCPP_TEMPLATE_VIS __map_iterator
                           ^
/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/map:794:5: note: candidate constructor not viable: no known conversion from 'std::__1::map<std::__1::basic_string<char>, Client *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Client *> > >::iterator' (aka '__map_iterator<__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client *>, void *> *, long> >') to 'std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client>, void *> *, long>' for 1st argument
    __map_iterator(_TreeIterator __i) _NOEXCEPT : __i_(__i) {}
    ^
Channel.cpp:194:21: error: no viable conversion from '__map_iterator<__tree_iterator<__value_type<[...], Client *>, std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Client *> > >::__node_pointer, [...]>>' to '__map_iterator<__tree_iterator<__value_type<[...], Client>, std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Client> > >::__node_pointer, [...]>>'
    client_iterator it = members.begin();
                    ^    ~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/map:776:28: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'std::__1::map<std::__1::basic_string<char>, Client *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Client *> > >::iterator' (aka '__map_iterator<__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client *>, void *> *, long> >') to 'const std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client>, void *> *, long> > &' for 1st argument
class _LIBCPP_TEMPLATE_VIS __map_iterator
                           ^
/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/map:794:5: note: candidate constructor not viable: no known conversion from 'std::__1::map<std::__1::basic_string<char>, Client *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Client *> > >::iterator' (aka '__map_iterator<__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client *>, void *> *, long> >') to 'std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client>, void *> *, long>' for 1st argument
    __map_iterator(_TreeIterator __i) _NOEXCEPT : __i_(__i) {}
    ^
Channel.cpp:219:21: error: no viable conversion from '__map_iterator<__tree_iterator<__value_type<[...], Client *>, std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Client *> > >::__node_pointer, [...]>>' to '__map_iterator<__tree_iterator<__value_type<[...], Client>, std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Client> > >::__node_pointer, [...]>>'
    client_iterator it = members.begin();
                    ^    ~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/map:776:28: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'std::__1::map<std::__1::basic_string<char>, Client *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Client *> > >::iterator' (aka '__map_iterator<__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client *>, void *> *, long> >') to 'const std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client>, void *> *, long> > &' for 1st argument
class _LIBCPP_TEMPLATE_VIS __map_iterator
                           ^
/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/map:794:5: note: candidate constructor not viable: no known conversion from 'std::__1::map<std::__1::basic_string<char>, Client *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Client *> > >::iterator' (aka '__map_iterator<__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client *>, void *> *, long> >') to 'std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client>, void *> *, long>' for 1st argument
    __map_iterator(_TreeIterator __i) _NOEXCEPT : __i_(__i) {}
    ^
Channel.cpp:260:25: error: no viable conversion from '__map_iterator<__tree_iterator<__value_type<[...], Client *>, std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Client *> > >::__node_pointer, [...]>>' to '__map_iterator<__tree_iterator<__value_type<[...], Client>, std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Client> > >::__node_pointer, [...]>>'
        client_iterator itMember = members.find(target->getNick());
                        ^          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/map:776:28: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'std::__1::map<std::__1::basic_string<char>, Client *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Client *> > >::iterator' (aka '__map_iterator<__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client *>, void *> *, long> >') to 'const std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client>, void *> *, long> > &' for 1st argument
class _LIBCPP_TEMPLATE_VIS __map_iterator
                           ^
/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/map:794:5: note: candidate constructor not viable: no known conversion from 'std::__1::map<std::__1::basic_string<char>, Client *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Client *> > >::iterator' (aka '__map_iterator<__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client *>, void *> *, long> >') to 'std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client>, void *> *, long>' for 1st argument
    __map_iterator(_TreeIterator __i) _NOEXCEPT : __i_(__i) {}
    ^
Channel.cpp:261:25: error: no viable conversion from '__map_iterator<__tree_iterator<__value_type<[...], Client *>, std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Client *> > >::__node_pointer, [...]>>' to '__map_iterator<__tree_iterator<__value_type<[...], Client>, std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Client> > >::__node_pointer, [...]>>'
        client_iterator itOperator = operators.find(target->getNick());
                        ^            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/map:776:28: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'std::__1::map<std::__1::basic_string<char>, Client *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Client *> > >::iterator' (aka '__map_iterator<__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client *>, void *> *, long> >') to 'const std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client>, void *> *, long> > &' for 1st argument
class _LIBCPP_TEMPLATE_VIS __map_iterator
                           ^
/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/map:794:5: note: candidate constructor not viable: no known conversion from 'std::__1::map<std::__1::basic_string<char>, Client *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Client *> > >::iterator' (aka '__map_iterator<__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client *>, void *> *, long> >') to 'std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client>, void *> *, long>' for 1st argument
    __map_iterator(_TreeIterator __i) _NOEXCEPT : __i_(__i) {}
    ^
Channel.cpp:262:25: error: no viable conversion from '__map_iterator<__tree_iterator<__value_type<[...], Client *>, std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Client *> > >::__node_pointer, [...]>>' to '__map_iterator<__tree_iterator<__value_type<[...], Client>, std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Client> > >::__node_pointer, [...]>>'
        client_iterator itInvited = invited.find(target->getNick());
                        ^           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/map:776:28: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'std::__1::map<std::__1::basic_string<char>, Client *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Client *> > >::iterator' (aka '__map_iterator<__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client *>, void *> *, long> >') to 'const std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client>, void *> *, long> > &' for 1st argument
class _LIBCPP_TEMPLATE_VIS __map_iterator
                           ^
/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/map:794:5: note: candidate constructor not viable: no known conversion from 'std::__1::map<std::__1::basic_string<char>, Client *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Client *> > >::iterator' (aka '__map_iterator<__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client *>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client *>, void *> *, long> >') to 'std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, Client>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Client>, void *> *, long>' for 1st argument
    __map_iterator(_TreeIterator __i) _NOEXCEPT : __i_(__i) {}
    ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
make: *** [Channel.o] Error 1
